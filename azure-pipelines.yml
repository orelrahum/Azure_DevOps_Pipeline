# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#

trigger: 
 branches:
   include:
     - main
 paths:
   include:
     - my_app.py

pool: Default



#make resources group (added in note bc resources already ready for costum ubuntu os)
steps:
#- task: PowerShell@2
#  inputs:
#    targetType: 'inline'
#    script: |
#      # Write your PowerShell commands here.
#      try
#      {
#      New-AzResourceGroup orelrahumubuntu_group "northeurope" -ErrorAction Stop
#      }
#      catch 
#      {
#      Write-Host "Aleardy have resourcegroup"
#      }

#Task 4
#Make Storage 1

- task: PowerShell@2
  inputs:
    filePath: 'Storage_Codes\Storage_Maker.ps1'
    arguments: 'orelrahumstorage1ubuntu Storage1_Parameters.json'


#Make Storage 1 container
- task: PowerShell@2
  inputs:
    filePath: 'Storage_Codes\container_Maker.ps1'
    arguments: 'orelrahumstorage1ubuntu'

#Make Storage 2
- task: PowerShell@2
  inputs:
    filePath: 'Storage_Codes\Storage_Maker.ps1'
    arguments: 'orelrahumstorage2ubuntu Storage2_Parameters.json'

#Make Storage 2 container
- task: PowerShell@2
  inputs:
    filePath: 'Storage_Codes\container_Maker.ps1'
    arguments: 'orelrahumstorage2ubuntu'

#Make ubuntu server (use ready os which already login to azcopy and az)
- task: PowerShell@2
  inputs:
    filePath: 'Server_Codes\Server_Maker.ps1'


#Task5

#get orelrahumserverubuntu-ip from Task4
#Connect to orelrahumserverubuntu by SSH
#download create_upload_copy.ps1 
#run create_upload_copy.ps1 on server

- task: Bash@3
  inputs:
    filePath: 'Create_upload_copy\connect_server.bash'

